@ /video root:video {
  #%autostart true
  #%graph.comment Video Player\n\nPlay a video through a series of colour and\n3D transforms.\n\nNo video file included. Choose one using the\ncustom GUI.\n\nThe colourbalance and 3D transform components\nare currently available in the additional components\nrepository. See www.praxislive.org\n
  #%praxis.version 5.0.0-beta-1
  .renderer OpenGL
  .width 800
  .height 600
  @ ./output video:output {
    #%graph.x 918
    #%graph.y 105
    .title "Video Player"
    .always-on-top true
  }
  @ ./player video:player {
    #%graph.x 251
    #%graph.y 301
    .audio-sink autoaudiosink
  }
  @ ./start-trigger1 core:start-trigger {
    #%graph.x 25
    #%graph.y 301
  }
  @ ./xform-3d video:gl:p3d {
    #%graph.x 455
    #%graph.y 89
    .code "

    @In(1)
    PImage in;
    @P(1)
    @Type.Number(min = 0, max = 1, def = 0.5)
    double translate_x;
    @P(2)
    @Type.Number(min = 0, max = 1, def = 0.5)
    double translate_y;
    @P(3)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_x;
    @P(4)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_y;
    @P(5)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_z;
    @P(6)
    @Type.Number(min = 0, max = 2, def = 1)
    double scale;
    
    @Override
    public void draw() \{
        double w2 = width / 2;
        double h2 = height / 2;
        translate(
                map(translate_x, 0, 1, -w2, width + w2), 
                map(translate_y, 0, 1, -h2, height + h2), 
                0);
        rotateX(map(rotate_x, -180, 180, -PI, PI));
        rotateY(map(rotate_y, -180, 180, -PI, PI));
        rotateZ(map(rotate_z, -180, 180, -PI, PI));
        scale(scale);
        image(in, -w2, -h2);
    \}
"
    .translate-y 0.4274193548387097
    .rotate-x 23.225806451612904
    .rotate-y -31.935483870967744
    .rotate-z 5.806451612903226
    .scale 0.7903225806451613
  }
  @ ./xform-3d-m1 video:gl:p3d {
    #%graph.x 694
    #%graph.y 179
    .code "

    @In(1)
    PImage in;
    @P(1)
    @Type.Number(min = 0, max = 1, def = 0.5)
    double translate_x;
    @P(2)
    @Type.Number(min = 0, max = 1, def = 0.5)
    double translate_y;
    @P(3)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_x;
    @P(4)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_y;
    @P(5)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_z;
    @P(6)
    @Type.Number(min = 0, max = 2, def = 1)
    double scale;
    
    @Override
    public void draw() \{
        double w2 = width / 2;
        double h2 = height / 2;
        translate(
                map(translate_x, 0, 1, -w2, width + w2), 
                map(translate_y, 0, 1, -h2, height + h2), 
                0);
        rotateX(map(rotate_x, -180, 180, -PI, PI));
        rotateY(map(rotate_y, -180, 180, -PI, PI));
        rotateZ(map(rotate_z, -180, 180, -PI, PI));
        scale(scale);
        image(in, -w2, -h2);
    \}
"
    .translate-x 0.5967741935483872
    .translate-y 0.7661290322580645
    .rotate-x 92.90322580645163
    .rotate-y -177.09677419354838
    .rotate-z 180.0
    .scale 2.0
  }
  @ ./colourbalance1 video:custom {
    #%graph.x 455
    #%graph.y 351
    .code "

    @In(1) PImage in;
    
    @P(1) @Type.Number(min = 0, max = 1, def = 1)
    double red;
    @P(2) @Type.Number(min = 0, max = 1, def = 1)
    double green;
    @P(3) @Type.Number(min = 0, max = 1, def = 1)
    double blue;

    @Override
    public void draw() \{
        copy(in);
        release(in);
        noStroke();
        blendMode(MULTIPLY);
        fill(red * 255, green * 255, blue * 255);
        rect(0, 0, width, height);
    \}
"
    .red 0.6
    .green 0.1
    .blue 0.0
  }
  @ ./xform-3d-m2 video:gl:p3d {
    #%graph.x 694
    #%graph.y 427
    .code "

    @In(1)
    PImage in;
    @P(1)
    @Type.Number(min = 0, max = 1, def = 0.5)
    double translate_x;
    @P(2)
    @Type.Number(min = 0, max = 1, def = 0.5)
    double translate_y;
    @P(3)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_x;
    @P(4)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_y;
    @P(5)
    @Type.Number(min = -180, max = 180, def = 0)
    double rotate_z;
    @P(6)
    @Type.Number(min = 0, max = 2, def = 1)
    double scale;
    
    @Override
    public void draw() \{
        double w2 = width / 2;
        double h2 = height / 2;
        translate(
                map(translate_x, 0, 1, -w2, width + w2), 
                map(translate_y, 0, 1, -h2, height + h2), 
                0);
        rotateX(map(rotate_x, -180, 180, -PI, PI));
        rotateY(map(rotate_y, -180, 180, -PI, PI));
        rotateZ(map(rotate_z, -180, 180, -PI, PI));
        scale(scale);
        image(in, -w2, -h2);
    \}
"
    .translate-x 0.25000000000000006
    .translate-y 0.3951612903225807
    .rotate-x -116.12903225806451
    .rotate-y -101.61290322580643
    .rotate-z -124.83870967741936
    .scale 1.6935483870967742
  }
  @ ./colourbalance2 video:custom {
    #%graph.x 455
    #%graph.y 531
    .code "

    @In(1) PImage in;
    
    @P(1) @Type.Number(min = 0, max = 1, def = 1)
    double red;
    @P(2) @Type.Number(min = 0, max = 1, def = 1)
    double green;
    @P(3) @Type.Number(min = 0, max = 1, def = 1)
    double blue;

    @Override
    public void draw() \{
        copy(in);
        release(in);
        noStroke();
        blendMode(MULTIPLY);
        fill(red * 255, green * 255, blue * 255);
        rect(0, 0, width, height);
    \}
"
    .red 0.0
    .green 0.1
    .blue 0.6
  }
  ~ ./start-trigger1!out ./player!play
  ~ ./player!out ./xform-3d!in
  ~ ./xform-3d!out ./output!in
  ~ ./player!out ./colourbalance1!in
  ~ ./colourbalance1!out ./xform-3d-m1!in
  ~ ./xform-3d-m1!out ./output!in
  ~ ./colourbalance2!out ./xform-3d-m2!in
  ~ ./player!out ./colourbalance2!in
  ~ ./xform-3d-m2!out ./output!in
  ~ ./player!ready ./player!play
}
